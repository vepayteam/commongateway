---
kind: pipeline
type: docker
name: build-deploy-development-pull-request

platform:
  os: linux
  arch: amd64

concurrency:
  limit: 2

steps:
- name: submodules
  pull: if-not-exists
  image: alpine/git:v2.30.1
  commands:
  - git submodule update --recursive --init

- name: check-for-conventional-commits
  pull: if-not-exists
  image: aevea/commitsar:0.15.0
  commands:
  - commitsar -v -s

- name: notify-conventional-commits-dcd24bf89c55dfa36844603c62d8b7dd
  pull: always
  image: registry.vepay.dev/ci/tools
  commands:
  - export BUILD_STATUS=$$(cat /run/drone/env | grep DRONE_STAGE_STATUS | cut -d '=' -f 2 | tr -d \")
  - gitea-status -t "conventional-commits" -m "$${BUILD_STATUS:-$$DRONE_STAGE_STATUS}" -s "$${BUILD_STATUS:-$$DRONE_STAGE_STATUS}" -u "https://www.conventionalcommits.org/en/v1.0.0/#why-use-conventional-commits"
  environment:
    GITEA_TOKEN:
      from_secret: GITEA_TOKEN
  when:
    status:
    - failure
    - success

- name: apache2
  pull: if-not-exists
  image: registry.vepay.dev/library/php:7.2
  detach: true
  commands:
  - mkdir -p $$(pwd)/runtime/logs/console
  - ln -s $$(pwd) /www
  - apache2-foreground
  environment:
    DATABASE_DSN: mysql:host=mariadb;port=3306;dbname=vepay
    DATABASE_USER: vepay
    DATABASE_USER_PASSWORD: vepay
    REDIS_DB_NUM_CACHE: 4
    REDIS_DB_NUM_QUEUE: 3
    REDIS_HOST: redis
    REDIS_PORT: 6379
    TEST_URL: https://test-env-${DRONE_REPO_NAME}.backend.vepay.cf/

- name: wait-for-services
  pull: always
  image: registry.vepay.dev/ci/tools
  commands:
  - wait-for mariadb:3306 -s -t 60
  - wait-for redis:6379 -s
  - wait-for apache2:8000 -s

- name: prepare-test-env
  pull: if-not-exists
  image: registry.vepay.dev/library/php:7.2
  commands:
  - php init --env=dev
  - php yii migrate/up --interactive=0
  environment:
    DATABASE_DSN: mysql:host=mariadb;port=3306;dbname=vepay
    DATABASE_USER: vepay
    DATABASE_USER_PASSWORD: vepay
    REDIS_DB_NUM_CACHE: 4
    REDIS_DB_NUM_QUEUE: 3
    REDIS_HOST: redis
    REDIS_PORT: 6379
    TEST_URL: https://test-env-${DRONE_REPO_NAME}.backend.vepay.cf/

- name: unit-functional-testing
  pull: if-not-exists
  image: registry.vepay.dev/library/php:7.2
  commands:
  - vendor/bin/codecept run acceptance
  - vendor/bin/codecept run unit
  - vendor/bin/codecept run functional
  environment:
    DATABASE_DSN: mysql:host=mariadb;port=3306;dbname=vepay
    DATABASE_USER: vepay
    DATABASE_USER_PASSWORD: vepay
    REDIS_DB_NUM_CACHE: 4
    REDIS_DB_NUM_QUEUE: 3
    REDIS_HOST: redis
    REDIS_PORT: 6379
    TEST_URL: https://test-env-${DRONE_REPO_NAME}.backend.vepay.cf/

- name: integration-testing
  pull: if-not-exists
  image: registry.vepay.dev/library/php:7.2
  commands:
  - vendor/bin/codecept run kfapi --env drone
  environment:
    DATABASE_DSN: mysql:host=mariadb;port=3306;dbname=vepay
    DATABASE_USER: vepay
    DATABASE_USER_PASSWORD: vepay
    REDIS_DB_NUM_CACHE: 4
    REDIS_DB_NUM_QUEUE: 3
    REDIS_HOST: redis
    REDIS_PORT: 6379
    TEST_URL: https://test-env-${DRONE_REPO_NAME}.backend.vepay.cf/
  failure: ignore

- name: post-test-step
  pull: if-not-exists
  image: registry.vepay.dev/library/php:7.2
  commands:
  - php yii cache/flush-all --interactive 0
  environment:
    DATABASE_DSN: mysql:host=mariadb;port=3306;dbname=vepay
    DATABASE_USER: vepay
    DATABASE_USER_PASSWORD: vepay
    REDIS_DB_NUM_CACHE: 4
    REDIS_DB_NUM_QUEUE: 3
    REDIS_HOST: redis
    REDIS_PORT: 6379
    TEST_URL: https://test-env-${DRONE_REPO_NAME}.backend.vepay.cf/

- name: docker-tag-7d9d8b7eed1620f6eefac4a9eca4190b
  pull: always
  image: registry.vepay.dev/ci/tools
  commands:
  - echo -n "`urlencode ${DRONE_BUILD_NUMBER}`" > .tags
  - echo -n ",`urlencode ${DRONE_SOURCE_BRANCH}`" >> .tags

- name: docker-image-build
  pull: if-not-exists
  image: plugins/docker:19.03.8
  settings:
    build_args:
    - ENVIRONMENT=kube
    compress: true
    password:
      from_secret: DOCKER_PASSWORD
    registry: registry.vepay.dev
    repo: registry.vepay.dev/${DRONE_REPO,,}
    target: base
    username:
      from_secret: DOCKER_USERNAME

- name: notify-docker-image-url-b04147de712e964fd4efa115385e0fc9
  pull: always
  image: registry.vepay.dev/ci/tools
  commands:
  - gitea-status -t "docker-image/url" -m "registry.vepay.dev/${DRONE_REPO,,}:`urlencode ${DRONE_SOURCE_BRANCH}`" -s "success" -u "${DRONE_BUILD_LINK}"
  environment:
    GITEA_TOKEN:
      from_secret: GITEA_TOKEN
  when:
    status:
    - success

- name: helm-values-generator-fe08c6bd71f0a5dfcf69a2f22695aa71
  pull: always
  image: registry.vepay.dev/ci/tools
  commands:
  - touch values.yaml
  - yq write values.yaml "image.repository" "registry.vepay.dev/${DRONE_REPO,,}" -i
  - yq write values.yaml "image.tag" "${DRONE_BUILD_NUMBER}" -i
  - yq write values.yaml "ingress.hosts[0].host" "`replace-slash ${DRONE_SOURCE_BRANCH}`-${DRONE_REPO_NAME}.backend.vepay.cf" -i
  - yq write values.yaml "ingress.hosts[0].paths[0]" "/" -i
  - yq write values.yaml "ingress.tls[0].hosts[0]" "`replace-slash ${DRONE_SOURCE_BRANCH}`-${DRONE_REPO_NAME}.backend.vepay.cf" -i
  - yq write values.yaml "ingress.tls[0].secretName" "backend-vepay-cf-wildcard-certificate" -i
  - yq write values.yaml "redis.enabled" "true" -i
  - yq write values.yaml "config.increment.pay_schet" "$$((1000*${DRONE_BUILD_NUMBER}+1710000000))" -i
  - yq write values.yaml "config.payments.brs.url_xml" "https://194.67.29.216:8443" -i
  - echo "=>>>" && cat values.yaml

- name: helm-deployment-upgrade-baa45884b60a4f0c9e522a66e07efbf7
  pull: if-not-exists
  image: registry.vepay.dev/drone/helm3:3.9.2
  settings:
    add_repos:
    - vepay=https://registry.vepay.dev/chartrepo/${DRONE_REPO_NAMESPACE}
    atomic_upgrade: true
    chart: vepay/${DRONE_REPO_NAME}
    cleanup_failed_upgrade: true
    kube_api_server: https://192.168.110.1:6443
    kube_service_account: deploy-app-user
    kube_token:
      from_secret: KUBE_TOKEN
    mode: upgrade
    namespace: api-edge
    release: ${DRONE_REPO_NAMESPACE,,}-${DRONE_REPO_NAME,,}-pr-${DRONE_PULL_REQUEST}
    repo_password:
      from_secret: DOCKER_PASSWORD
    repo_username:
      from_secret: DOCKER_USERNAME
    skip_tls_verify: true
    timeout: 20m
    values_files:
    - values.yaml
    wait_for_upgrade: true

- name: notify-app-test-url-45d1b6d1dcfc91ac3be6776a252e4525
  pull: always
  image: registry.vepay.dev/ci/tools
  commands:
  - gitea-status -t "app-test/url" -m "https://`replace-slash ${DRONE_SOURCE_BRANCH}`-${DRONE_REPO_NAME}.backend.vepay.cf/" -s "success" -u "https://`replace-slash ${DRONE_SOURCE_BRANCH}`-${DRONE_REPO_NAME}.backend.vepay.cf/"
  environment:
    GITEA_TOKEN:
      from_secret: GITEA_TOKEN

services:
- name: mariadb
  pull: always
  image: registry.vepay.dev/${DRONE_REPO,,}:maria-test-data
  environment:
    MYSQL_DATABASE: vepay
    MYSQL_PASSWORD: vepay
    MYSQL_RANDOM_ROOT_PASSWORD: yes
    MYSQL_USER: vepay
  ports:
  - 3306

- name: redis
  pull: if-not-exists
  image: redis:6
  ports:
  - 6379

image_pull_secrets:
- dockerconfig

trigger:
  branch:
  - develop
  event:
  - pull_request

---
kind: pipeline
type: docker
name: build-deploy-development-push

platform:
  os: linux
  arch: amd64

concurrency:
  limit: 2

steps:
- name: submodules
  pull: if-not-exists
  image: alpine/git:v2.30.1
  commands:
  - git submodule update --recursive --init

- name: apache2
  pull: if-not-exists
  image: registry.vepay.dev/library/php:7.2
  detach: true
  commands:
  - mkdir -p $$(pwd)/runtime/logs/console
  - ln -s $$(pwd) /www
  - apache2-foreground
  environment:
    DATABASE_DSN: mysql:host=mariadb;port=3306;dbname=vepay
    DATABASE_USER: vepay
    DATABASE_USER_PASSWORD: vepay
    REDIS_DB_NUM_CACHE: 4
    REDIS_DB_NUM_QUEUE: 3
    REDIS_HOST: redis
    REDIS_PORT: 6379
    TEST_URL: https://test-env-${DRONE_REPO_NAME}.backend.vepay.cf/

- name: wait-for-services
  pull: always
  image: registry.vepay.dev/ci/tools
  commands:
  - wait-for mariadb:3306 -s -t 60
  - wait-for redis:6379 -s
  - wait-for apache2:8000 -s

- name: prepare-test-env
  pull: if-not-exists
  image: registry.vepay.dev/library/php:7.2
  commands:
  - php init --env=dev
  - php yii migrate/up --interactive=0
  environment:
    DATABASE_DSN: mysql:host=mariadb;port=3306;dbname=vepay
    DATABASE_USER: vepay
    DATABASE_USER_PASSWORD: vepay
    REDIS_DB_NUM_CACHE: 4
    REDIS_DB_NUM_QUEUE: 3
    REDIS_HOST: redis
    REDIS_PORT: 6379
    TEST_URL: https://test-env-${DRONE_REPO_NAME}.backend.vepay.cf/

- name: unit-functional-testing
  pull: if-not-exists
  image: registry.vepay.dev/library/php:7.2
  commands:
  - vendor/bin/codecept run acceptance
  - vendor/bin/codecept run unit
  - vendor/bin/codecept run functional
  environment:
    DATABASE_DSN: mysql:host=mariadb;port=3306;dbname=vepay
    DATABASE_USER: vepay
    DATABASE_USER_PASSWORD: vepay
    REDIS_DB_NUM_CACHE: 4
    REDIS_DB_NUM_QUEUE: 3
    REDIS_HOST: redis
    REDIS_PORT: 6379
    TEST_URL: https://test-env-${DRONE_REPO_NAME}.backend.vepay.cf/

- name: integration-testing
  pull: if-not-exists
  image: registry.vepay.dev/library/php:7.2
  commands:
  - vendor/bin/codecept run kfapi --env drone
  environment:
    DATABASE_DSN: mysql:host=mariadb;port=3306;dbname=vepay
    DATABASE_USER: vepay
    DATABASE_USER_PASSWORD: vepay
    REDIS_DB_NUM_CACHE: 4
    REDIS_DB_NUM_QUEUE: 3
    REDIS_HOST: redis
    REDIS_PORT: 6379
    TEST_URL: https://test-env-${DRONE_REPO_NAME}.backend.vepay.cf/
  failure: ignore

- name: post-test-step
  pull: if-not-exists
  image: registry.vepay.dev/library/php:7.2
  commands:
  - php yii cache/flush-all --interactive 0
  environment:
    DATABASE_DSN: mysql:host=mariadb;port=3306;dbname=vepay
    DATABASE_USER: vepay
    DATABASE_USER_PASSWORD: vepay
    REDIS_DB_NUM_CACHE: 4
    REDIS_DB_NUM_QUEUE: 3
    REDIS_HOST: redis
    REDIS_PORT: 6379
    TEST_URL: https://test-env-${DRONE_REPO_NAME}.backend.vepay.cf/

- name: docker-tag-295b3c44309601b1d345bccaaede9d84
  pull: always
  image: registry.vepay.dev/ci/tools
  commands:
  - echo -n "`urlencode ${DRONE_BUILD_NUMBER}`" > .tags
  - echo -n ",`urlencode ${DRONE_BRANCH}`" >> .tags

- name: docker-image-build
  pull: if-not-exists
  image: plugins/docker:19.03.8
  settings:
    build_args:
    - ENVIRONMENT=kube
    compress: true
    password:
      from_secret: DOCKER_PASSWORD
    registry: registry.vepay.dev
    repo: registry.vepay.dev/${DRONE_REPO,,}
    target: base
    username:
      from_secret: DOCKER_USERNAME

- name: notify-docker-image-url-deb1b81bf4447f8081088a71faf1022a
  pull: always
  image: registry.vepay.dev/ci/tools
  commands:
  - gitea-status -t "docker-image/url" -m "registry.vepay.dev/${DRONE_REPO,,}:`urlencode ${DRONE_BRANCH}`" -s "success" -u "${DRONE_BUILD_LINK}"
  environment:
    GITEA_TOKEN:
      from_secret: GITEA_TOKEN
  when:
    status:
    - success

- name: helm-values-generator-87f0b46249bd299b733d5b3d7a0b567c
  pull: always
  image: registry.vepay.dev/ci/tools
  commands:
  - touch values.yaml
  - yq write values.yaml "image.repository" "registry.vepay.dev/${DRONE_REPO,,}" -i
  - yq write values.yaml "image.tag" "${DRONE_BUILD_NUMBER}" -i
  - yq write values.yaml "ingress.hosts[0].host" "${DRONE_BRANCH}-test-${DRONE_REPO_NAME}.backend.vepay.cf" -i
  - yq write values.yaml "ingress.hosts[0].paths[0]" "/" -i
  - yq write values.yaml "ingress.tls[0].hosts[0]" "${DRONE_BRANCH}-test-${DRONE_REPO_NAME}.backend.vepay.cf" -i
  - yq write values.yaml "ingress.tls[0].secretName" "backend-vepay-cf-wildcard-certificate" -i
  - yq write values.yaml "config.increment.pay_schet" "$$((1000*${DRONE_BUILD_NUMBER}+1560000000))" -i
  - yq write values.yaml "config.payments.brs.url_xml" "https://194.67.29.216:8443" -i
  - echo "=>>>" && cat values.yaml

- name: helm-deployment-upgrade-92ef42f80124f30279fb47f2cd4ffd68
  pull: if-not-exists
  image: registry.vepay.dev/drone/helm3:3.9.2
  settings:
    add_repos:
    - vepay=https://registry.vepay.dev/chartrepo/${DRONE_REPO_NAMESPACE}
    atomic_upgrade: true
    chart: vepay/${DRONE_REPO_NAME}
    cleanup_failed_upgrade: true
    kube_api_server: https://192.168.110.1:6443
    kube_service_account: deploy-app-user
    kube_token:
      from_secret: KUBE_TOKEN
    mode: upgrade
    namespace: api-testing
    release: ${DRONE_REPO_NAMESPACE,,}-${DRONE_REPO_NAME,,}-${DRONE_BRANCH}-test
    repo_password:
      from_secret: DOCKER_PASSWORD
    repo_username:
      from_secret: DOCKER_USERNAME
    skip_tls_verify: true
    timeout: 20m
    values_files:
    - values.yaml
    wait_for_upgrade: true

- name: notify-app-test-url-c3f56f8375d811da7142568f7f63ddc6
  pull: always
  image: registry.vepay.dev/ci/tools
  commands:
  - gitea-status -t "app-test/url" -m "https://${DRONE_BRANCH}-test-${DRONE_REPO_NAME}.backend.vepay.cf/" -s "success" -u "https://${DRONE_BRANCH}-test-${DRONE_REPO_NAME}.backend.vepay.cf/"
  environment:
    GITEA_TOKEN:
      from_secret: GITEA_TOKEN

- name: helm-values-generator-9d75809f43841d74a14882719cb62864
  pull: always
  image: registry.vepay.dev/ci/tools
  commands:
  - touch values.yaml
  - yq write values.yaml "ingress.hosts[0].host" "${DRONE_BRANCH}-${DRONE_REPO_NAME}.backend.vepay.cf" -i
  - yq write values.yaml "ingress.hosts[0].paths[0]" "/" -i
  - yq write values.yaml "ingress.tls[0].hosts[0]" "${DRONE_BRANCH}-${DRONE_REPO_NAME}.backend.vepay.cf" -i
  - yq write values.yaml "ingress.tls[0].secretName" "backend-vepay-cf-wildcard-certificate" -i
  - yq write values.yaml "config.increment.pay_schet" "$$((1000*${DRONE_BUILD_NUMBER}+1500000000))" -i
  - echo "=>>>" && cat values.yaml

- name: helm-deployment-upgrade-3606237ab0fb9dcc2c35d0bef846fdb8
  pull: if-not-exists
  image: registry.vepay.dev/drone/helm3:3.9.2
  settings:
    add_repos:
    - vepay=https://registry.vepay.dev/chartrepo/${DRONE_REPO_NAMESPACE}
    atomic_upgrade: true
    chart: vepay/${DRONE_REPO_NAME}
    cleanup_failed_upgrade: true
    kube_api_server: https://192.168.110.1:6443
    kube_service_account: deploy-app-user
    kube_token:
      from_secret: KUBE_TOKEN
    mode: upgrade
    namespace: api-development
    release: ${DRONE_REPO_NAMESPACE,,}-${DRONE_REPO_NAME,,}-${DRONE_BRANCH}
    repo_password:
      from_secret: DOCKER_PASSWORD
    repo_username:
      from_secret: DOCKER_USERNAME
    skip_tls_verify: true
    timeout: 20m
    values_files:
    - values.yaml
    wait_for_upgrade: true

- name: notify-app-url-22c2eaa5e21a8df37982341630a7015a
  pull: always
  image: registry.vepay.dev/ci/tools
  commands:
  - gitea-status -t "app/url" -m "https://${DRONE_BRANCH}-${DRONE_REPO_NAME}.backend.vepay.cf/" -s "success" -u "https://${DRONE_BRANCH}-${DRONE_REPO_NAME}.backend.vepay.cf/"
  environment:
    GITEA_TOKEN:
      from_secret: GITEA_TOKEN

services:
- name: mariadb
  pull: always
  image: registry.vepay.dev/${DRONE_REPO,,}:maria-test-data
  environment:
    MYSQL_DATABASE: vepay
    MYSQL_PASSWORD: vepay
    MYSQL_RANDOM_ROOT_PASSWORD: yes
    MYSQL_USER: vepay
  ports:
  - 3306

- name: redis
  pull: if-not-exists
  image: redis:6
  ports:
  - 6379

image_pull_secrets:
- dockerconfig

trigger:
  branch:
  - develop
  event:
  - push

---
kind: pipeline
type: docker
name: build-deploy-staging-push

platform:
  os: linux
  arch: amd64

concurrency:
  limit: 2

steps:
- name: submodules
  pull: if-not-exists
  image: alpine/git:v2.30.1
  commands:
  - git submodule update --recursive --init

- name: docker-tag-124f9367ceef05be618224ab8eea34be
  pull: always
  image: registry.vepay.dev/ci/tools
  commands:
  - echo -n "`urlencode ${DRONE_BUILD_NUMBER}`" > .tags
  - echo -n ",`urlencode ${DRONE_BRANCH}`" >> .tags
  - echo -n ",`urlencode latest`" >> .tags
  - echo -n ",`urlencode staging`" >> .tags

- name: docker-image-build
  pull: if-not-exists
  image: plugins/docker:19.03.8
  settings:
    build_args:
    - ENVIRONMENT=kube
    compress: true
    password:
      from_secret: DOCKER_PASSWORD
    registry: registry.vepay.dev
    repo: registry.vepay.dev/${DRONE_REPO,,}
    target: base
    username:
      from_secret: DOCKER_USERNAME

- name: notify-docker-image-url-b5d5355c30978b3e113b3857342e02b9
  pull: always
  image: registry.vepay.dev/ci/tools
  commands:
  - gitea-status -t "docker-image/url" -m "registry.vepay.dev/${DRONE_REPO,,}:`urlencode latest`" -s "success" -u "${DRONE_BUILD_LINK}"
  environment:
    GITEA_TOKEN:
      from_secret: GITEA_TOKEN
  when:
    status:
    - success

- name: helm-values-generator-3448f1642d4540ed3dcfabaa30175008
  pull: always
  image: registry.vepay.dev/ci/tools
  commands:
  - touch values.yaml
  - yq write values.yaml "image.repository" "registry.vepay.dev/${DRONE_REPO,,}" -i
  - yq write values.yaml "image.tag" "${DRONE_BUILD_NUMBER}" -i
  - yq write values.yaml "ingress.enabled" "false" -i
  - yq write values.yaml "ingress.hosts[0].host" "test.vepay.online" -i
  - yq write values.yaml "ingress.hosts[0].paths[0]" "/" -i
  - yq write values.yaml "ingress.hosts[1].host" "${DRONE_REPO_NAME}.backend.vepay.dev" -i
  - yq write values.yaml "ingress.hosts[1].paths[0]" "/" -i
  - yq write values.yaml "ingress.tls[0].hosts[0]" "test.vepay.online" -i
  - yq write values.yaml "ingress.tls[0].secretName" "test-vepay-online-certificate" -i
  - yq write values.yaml "ingress.tls[1].hosts[0]" "${DRONE_REPO_NAME}.backend.vepay.dev" -i
  - yq write values.yaml "ingress.tls[1].secretName" "backend-vepay-dev-wildcard-certificate" -i
  - yq write values.yaml "config.payments.brs.url_xml" "https://194.67.29.216:8443" -i
  - echo "=>>>" && cat values.yaml

- name: helm-deployment-upgrade-091eac7be9d381f18978b1c621dd6a86
  pull: if-not-exists
  image: registry.vepay.dev/drone/helm3:3.9.2
  settings:
    add_repos:
    - vepay=https://registry.vepay.dev/chartrepo/${DRONE_REPO_NAMESPACE}
    atomic_upgrade: true
    chart: vepay/${DRONE_REPO_NAME}
    cleanup_failed_upgrade: true
    kube_api_server: https://192.168.110.1:6443
    kube_service_account: deploy-app-user
    kube_token:
      from_secret: KUBE_TOKEN
    mode: upgrade
    namespace: api-staging
    release: ${DRONE_REPO_NAMESPACE,,}-${DRONE_REPO_NAME,,}-staging
    repo_password:
      from_secret: DOCKER_PASSWORD
    repo_username:
      from_secret: DOCKER_USERNAME
    skip_tls_verify: true
    timeout: 20m
    values_files:
    - values.yaml
    wait_for_upgrade: true

- name: notify-app-url-9469898d4f9dd92dd107433d19dc4d8e
  pull: always
  image: registry.vepay.dev/ci/tools
  commands:
  - gitea-status -t "app/url" -m "${DRONE_REPO_NAME}.backend.vepay.dev" -s "success" -u "${DRONE_REPO_NAME}.backend.vepay.dev"
  environment:
    GITEA_TOKEN:
      from_secret: GITEA_TOKEN

image_pull_secrets:
- dockerconfig

trigger:
  branch:
  - master
  event:
  - push

---
kind: pipeline
type: docker
name: promote-release

platform:
  os: linux
  arch: amd64

concurrency:
  limit: 2

steps:
- name: assert-version-provided
  pull: always
  image: alpine
  commands:
  - test -z "$$VERSION" && exit 1
  - echo $$VERSION > .version

- name: build-changelog
  pull: if-not-exists
  image: registry.vepay.dev/ci/conventional-changelog:2.1.1
  commands:
  - conventional-changelog -p angular -i CHANGELOG.md -s

- name: gitea-release
  pull: always
  image: plugins/gitea-release
  settings:
    api_key:
      from_secret: GITEA_TOKEN
    base_url: https://git.vepay.cf
    note: CHANGELOG.md
    title: .version

image_pull_secrets:
- dockerconfig

trigger:
  branch:
  - master
  event:
  - promote
  target:
  - release

---
kind: secret
name: DOCKER_USERNAME

get:
  path: docker
  name: username

---
kind: secret
name: DOCKER_PASSWORD

get:
  path: docker
  name: password

---
kind: secret
name: KUBE_TOKEN

get:
  path: deploy-app-user-token-v27c8
  name: token

---
kind: secret
name: KUBE_CERTIFICATE

get:
  path: deploy-app-user-token-v27c8
  name: ca.crt

---
kind: secret
name: GITEA_TOKEN

get:
  path: gitea
  name: token

---
kind: signature
hmac: 9b2356b8001425160d8eade22e090f0c22c2ca824f3f2c9e52c12ca9a42ad66e

...
