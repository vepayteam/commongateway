---
kind: pipeline
type: kubernetes
name: build-deploy-development-push

platform:
  os: linux
  arch: amd64

steps:
- name: check-for-conventional-commits
  pull: if-not-exists
  image: aevea/commitsar
  commands:
  - commitsar -v -s
  failure: ignore
  when:
    branch:
    - feature/*
    - feat/*
    - hotfix/*
    - fix/*

- name: notify-developer-cc-checks
  pull: always
  image: registry.vepay.cf/ci-tools
  commands:
  - gitea-status "conventional-commits" "${DRONE_STAGE_STATUS}" "${DRONE_STAGE_STATUS}" "${DRONE_BUILD_LINK}"
  environment:
    GITEA_TOKEN:
      from_secret: GITEA_TOKEN
  when:
    branch:
    - feature/*
    - feat/*
    - hotfix/*
    - fix/*
    status:
    - failure
    - success

- name: docker-tag-f9a32b4ab2477fbd8d5ecb47cfba825c
  pull: always
  image: registry.vepay.cf/ci-tools
  commands:
  - echo -n "${DRONE_BUILD_NUMBER},${DRONE_BRANCH//\//-}" > .tags

- name: docker-image-build
  image: plugins/docker
  settings:
    password:
      from_secret: DOCKER_PASSWORD
    registry: registry.vepay.cf
    repo: registry.vepay.cf/${DRONE_REPO,,}
    username:
      from_secret: DOCKER_USERNAME

- name: notify-gitea-docker-image-url
  pull: always
  image: registry.vepay.cf/ci-tools
  commands:
  - gitea-status "docker-image/url" "registry.vepay.cf/${DRONE_REPO,,}:${DRONE_BRANCH//\//-}" "success" "${DRONE_BUILD_LINK}"
  environment:
    GITEA_TOKEN:
      from_secret: GITEA_TOKEN

- name: fetch-extract-helm-package-2636825aa6bb09be7a3998172154ea86
  pull: if-not-exists
  image: dtzar/helm-kubectl
  commands:
  - helm repo add vepay http://charts.service.vepay:8080/
  - helm repo update
  - helm pull --untar vepay/${DRONE_REPO_NAME}

- name: helm-deployment-uninstall-963e0f1ae9f7ab2130d2a2feb26d2b1a
  image: pelotech/drone-helm3
  settings:
    add_repos:
    - vepay=http://charts.service.vepay:8080/
    atomic_upgrade: true
    chart: ${DRONE_REPO_NAME}
    cleanup_failed_upgrade: true
    kube_api_server: https://kubernetes.default.svc
    kube_service_account:
      from_secret: KUBE_SERVICE_ACCOUNT
    kube_token:
      from_secret: KUBE_TOKEN
    mode: uninstall
    namespace: api-testing
    release: ${DRONE_SOURCE_BRANCH//\//-}-test
    skip_tls_verify: true
    update_dependencies: true
    wait_for_upgrade: true
  when:
    branch:
    - develop

- name: helm-deployment-upgrade-f43c7461bb3dd2a6709d0e1da0d8baa3
  image: pelotech/drone-helm3
  settings:
    add_repos:
    - vepay=http://charts.service.vepay:8080/
    atomic_upgrade: true
    chart: ${DRONE_REPO_NAME}
    cleanup_failed_upgrade: true
    kube_api_server: https://kubernetes.default.svc
    kube_service_account:
      from_secret: KUBE_SERVICE_ACCOUNT
    kube_token:
      from_secret: KUBE_TOKEN
    mode: upgrade
    namespace: api-testing
    release: ${DRONE_BRANCH//\//-}-test
    skip_tls_verify: true
    update_dependencies: true
    values:
    - enableTunnel=true
    - image.app.repository=registry.vepay.cf/${DRONE_REPO,,}
    - image.app.tag=${DRONE_BUILD_NUMBER}
    - ingress.hosts[0].host=${DRONE_BRANCH//\//-}-test.192-168-110-1.nip.io
    - ingress.hosts[0].paths[0]=/
    wait_for_upgrade: true

- name: helm-deployment-upgrade-7a1466f191d016faae35fe0323b0000e
  image: pelotech/drone-helm3
  settings:
    add_repos:
    - vepay=http://charts.service.vepay:8080/
    atomic_upgrade: true
    chart: ${DRONE_REPO_NAME}
    cleanup_failed_upgrade: true
    kube_api_server: https://kubernetes.default.svc
    kube_service_account:
      from_secret: KUBE_SERVICE_ACCOUNT
    kube_token:
      from_secret: KUBE_TOKEN
    mode: upgrade
    namespace: api-develop
    release: ${DRONE_BRANCH//\//-}
    skip_tls_verify: true
    update_dependencies: true
    values:
    - enableTunnel=false
    - image.app.repository=registry.vepay.cf/${DRONE_REPO,,}
    - image.app.tag=${DRONE_BUILD_NUMBER}
    - ingress.hosts[0].host=${DRONE_BRANCH//\//-}.192-168-110-1.nip.io
    - ingress.hosts[0].paths[0]=/
    wait_for_upgrade: true
  when:
    branch:
    - develop

- name: notify-gitea-test-url
  pull: always
  image: registry.vepay.cf/ci-tools
  commands:
  - gitea-status "app-test/url"
  environment:
    GITEA_TOKEN:
      from_secret: GITEA_TOKEN
    WORK_BRANCH: ${DRONE_BRANCH}-test

- name: notify-gitea-url
  pull: always
  image: registry.vepay.cf/ci-tools
  commands:
  - gitea-status
  environment:
    GITEA_TOKEN:
      from_secret: GITEA_TOKEN
    WORK_BRANCH: ${DRONE_BRANCH}
  when:
    branch:
    - develop

image_pull_secrets:
- dockerconfig

trigger:
  branch:
  - feature/*
  - feat/*
  - hotfix/*
  - fix/*
  - develop
  event:
  - push

---
kind: pipeline
type: kubernetes
name: build-deploy-development-pull-request

platform:
  os: linux
  arch: amd64

steps:
- name: check-for-conventional-commits
  pull: if-not-exists
  image: aevea/commitsar
  commands:
  - commitsar -v -s
  failure: ignore

- name: notify-developer-cc-checks
  pull: always
  image: registry.vepay.cf/ci-tools
  commands:
  - gitea-status "conventional-commits" "${DRONE_STAGE_STATUS}" "${DRONE_STAGE_STATUS}" "${DRONE_BUILD_LINK}"
  environment:
    GITEA_TOKEN:
      from_secret: GITEA_TOKEN
  when:
    status:
    - failure
    - success

- name: docker-tag-2dc165c30f388d81a7132e1bb29dd0a9
  pull: always
  image: registry.vepay.cf/ci-tools
  commands:
  - echo -n "${DRONE_BUILD_NUMBER},${DRONE_SOURCE_BRANCH//\//-}" > .tags

- name: docker-image-build
  image: plugins/docker
  settings:
    password:
      from_secret: DOCKER_PASSWORD
    registry: registry.vepay.cf
    repo: registry.vepay.cf/${DRONE_REPO,,}
    username:
      from_secret: DOCKER_USERNAME

- name: notify-gitea-docker-image-url
  pull: always
  image: registry.vepay.cf/ci-tools
  commands:
  - gitea-status "docker-image/url" "registry.vepay.cf/${DRONE_REPO,,}:${DRONE_SOURCE_BRANCH//\//-}" "success" "${DRONE_BUILD_LINK}"
  environment:
    GITEA_TOKEN:
      from_secret: GITEA_TOKEN

- name: fetch-extract-helm-package-2636825aa6bb09be7a3998172154ea86
  pull: if-not-exists
  image: dtzar/helm-kubectl
  commands:
  - helm repo add vepay http://charts.service.vepay:8080/
  - helm repo update
  - helm pull --untar vepay/${DRONE_REPO_NAME}

- name: helm-deployment-upgrade-963e0f1ae9f7ab2130d2a2feb26d2b1a
  image: pelotech/drone-helm3
  settings:
    add_repos:
    - vepay=http://charts.service.vepay:8080/
    atomic_upgrade: true
    chart: ${DRONE_REPO_NAME}
    cleanup_failed_upgrade: true
    kube_api_server: https://kubernetes.default.svc
    kube_service_account:
      from_secret: KUBE_SERVICE_ACCOUNT
    kube_token:
      from_secret: KUBE_TOKEN
    mode: upgrade
    namespace: api-testing
    release: ${DRONE_SOURCE_BRANCH//\//-}-test
    skip_tls_verify: true
    update_dependencies: true
    values:
    - enableTunnel=true
    - image.app.repository=registry.vepay.cf/${DRONE_REPO,,}
    - image.app.tag=${DRONE_BUILD_NUMBER}
    - ingress.hosts[0].host=${DRONE_SOURCE_BRANCH//\//-}-test.192-168-110-1.nip.io
    - ingress.hosts[0].paths[0]=/
    wait_for_upgrade: true

- name: notify-gitea-test-url
  pull: always
  image: registry.vepay.cf/ci-tools
  commands:
  - gitea-status "app-test/url"
  environment:
    GITEA_TOKEN:
      from_secret: GITEA_TOKEN
    WORK_BRANCH: ${DRONE_SOURCE_BRANCH}-test

image_pull_secrets:
- dockerconfig

trigger:
  branch:
  - develop
  event:
  - pull_request
  repo:
    exclude:
    - backend/processing

---
kind: pipeline
type: kubernetes
name: build-deploy-staging-push

platform:
  os: linux
  arch: amd64

steps:
- name: docker-tag-124f9367ceef05be618224ab8eea34be
  pull: always
  image: registry.vepay.cf/ci-tools
  commands:
  - echo -n "${DRONE_BUILD_NUMBER},${DRONE_BRANCH},latest,staging" > .tags

- name: docker-image-build
  image: plugins/docker
  settings:
    password:
      from_secret: DOCKER_PASSWORD
    registry: registry.vepay.cf
    repo: registry.vepay.cf/${DRONE_REPO,,}
    username:
      from_secret: DOCKER_USERNAME

- name: notify-gitea-docker-image-url
  pull: always
  image: registry.vepay.cf/ci-tools
  commands:
  - gitea-status "docker-image/url" "registry.vepay.cf/${DRONE_REPO,,}:latest" "success" "${DRONE_BUILD_LINK}"
  environment:
    GITEA_TOKEN:
      from_secret: GITEA_TOKEN

- name: fetch-extract-helm-package-2636825aa6bb09be7a3998172154ea86
  pull: if-not-exists
  image: dtzar/helm-kubectl
  commands:
  - helm repo add vepay http://charts.service.vepay:8080/
  - helm repo update
  - helm pull --untar vepay/${DRONE_REPO_NAME}

- name: helm-deployment-upgrade-82ad7af807c8d579f564d6e00f7155b6
  image: pelotech/drone-helm3
  settings:
    add_repos:
    - vepay=http://charts.service.vepay:8080/
    atomic_upgrade: true
    chart: ${DRONE_REPO_NAME}
    cleanup_failed_upgrade: true
    kube_api_server: https://kubernetes.default.svc
    kube_service_account:
      from_secret: KUBE_SERVICE_ACCOUNT
    kube_token:
      from_secret: KUBE_TOKEN
    mode: upgrade
    namespace: api-staging
    release: ${DRONE_BRANCH}
    skip_tls_verify: true
    update_dependencies: true
    values:
    - enableTunnel=false
    - image.app.repository=registry.vepay.cf/${DRONE_REPO,,}
    - image.app.tag=${DRONE_BUILD_NUMBER}
    - ingress.hosts[0].host=test.192-168-110-1.nip.io
    - ingress.hosts[0].paths[0]=/
    wait_for_upgrade: true

- name: notify-gitea-url
  pull: always
  image: registry.vepay.cf/ci-tools
  commands:
  - gitea-status
  environment:
    GITEA_TOKEN:
      from_secret: GITEA_TOKEN
    WORK_BRANCH: test

image_pull_secrets:
- dockerconfig

trigger:
  branch:
  - master
  event:
  - push

---
kind: secret
name: DOCKER_USERNAME

get:
  path: docker
  name: username

---
kind: secret
name: DOCKER_PASSWORD

get:
  path: docker
  name: password

---
kind: secret
name: KUBE_SERVICE_ACCOUNT

get:
  path: sa
  name: username

---
kind: secret
name: KUBE_TOKEN

get:
  path: deploy-app-user-token-dwh67
  name: token

---
kind: secret
name: GITEA_TOKEN

get:
  path: gitea
  name: token

---
kind: signature
hmac: 04a83526bdfdd661f8778d479121997ecf2db25c761428fa1df510db63435639

...
