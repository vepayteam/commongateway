openapi: 3.0.0
info:
  title: Host to Host API v.1
  version: 1.0.0
security:
  - User: [ ]
    Token: [ ]
servers:
  - url: https://api.vepay.online/h2hapi/v1
  - url: https://test.vepay.online/h2hapi/v1
paths:
  /invoices:
    post:
      summary: Создание Счета
      description: Создает Счет с указанными данными и возвращает его в ответе
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Invoice"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoice"
        "409":
          description: Услуга не найдена / Шлюз не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictError"
        "422":
          description: Ошибки валидации. JSON-структура аналогичная запросу, где текст ошибки в значениях атрибутов объекта

  /invoices/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: ID Счета
    get:
      summary: Возвращает Счет
      description: Объект Счет со статусом
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoice"
        "404":
          description: Счет не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
  /invoices/{id}/payment:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: ID Счета
    put:
      summary: Оплата Счета
      description: Проводит оплату Счета и возвращает объект с URL страницы для прохождения проверки 3DS
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Payment"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        "409":
          description: Время ожидания оплаты вышло / Шлюз не найден / Ошибка проведения платежа...
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictError"
        "500":
          description: Ошибка подключения к банку...
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "404":
          description: Счет не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
        "422":
          description: Ошибки валидации. JSON-структура аналогичная запросу, где текст ошибки в значениях атрибутов объекта

  /invoices/{id}/payment/refunds:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: ID Счета
    post:
      summary: Возврат
      description: Производит возврат средств
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Refund"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Refund"
        "409":
          description: Платеж не завершен / Сумма возврата превышена / Не найден шлюз при расчете комиссии / Ошибка расчета комиссии
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictError"
        "404":
          description: Счет не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
        "422":
          description: Ошибки валидации. JSON-структура аналогичная запросу, где текст ошибки в значениях атрибутов объекта
  /refunds/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: ID Возврата
    get:
      description: Возвращает объект Возврата Средств по ID
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Refund"

  /invoices/{id}/payment/reversed:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: ID Счета
    put:
      summary: Отмена
      description: Производит отмену платежа
      responses:
        "200":
          description: OK
        "409":
          description: Платеж не завершен
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictError"
        "404":
          description: Счет не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"

components:
  securitySchemes:
    User:
      type: apiKey
      in: header
      name: X-User
      description: ID Партнера (МФО/Мерчанта)
    Token:
      type: apiKey
      in: header
      name: X-Token
      description: Токен, формируется по алгоритму sha1(sha1(ключ) + sha1(тело запроса))
  schemas:
    Invoice:
      description: Счет
      type: object
      required: [amountFractional, currencyCode, externalId, client]
      properties:
        id:
          type: integer
          readOnly: true
          description: ID Счета
          example: 2735093
        amountFractional:
          type: integer
          description: Сумма платежа в копейках (центах)
          minimum: 100
          maximum: 100000000
          example: 50000
        currencyCode:
          type: string
          description: Валюта Счета
          enum: [ RUB, USD, EUR ]
          example: "RUB"
        documentId:
          type: string
          description: Номер договора / номер заказа
          minLength: 1
          maxLength: 40
          example: "КА-123/12121212"
        externalId:
          type: string
          description: Внешний идентификатор Счета. Уникальный для Мерчанта.
          minLength: 1
          maxLength: 40
          example: "18a2f5e5-6548-4879-88db-b272c7d6b473"
        description:
          type: string
          description: Описание
          maxLength: 200
          example: "Счет №1457"
        timeoutSeconds:
          type: integer
          description: Тайм-аут ожидания оплаты в секундах. От 10 до 59 минут. По умолчанию 15 минут.
          minimum: 600 # 10 * 60
          maximum: 3540
          default: 15 * 60
          example: 3000
        successUrl:
          type: string
          description: URL для возврата после завершения платежа (успех)
          example: "https://www.site.com/example.html"
        failUrl:
          type: string
          description: URL для возврата после завершения платежа (ошибка)
          example: "https://www.site.com/example.html"
        cancelUrl:
          type: string
          description: URL для возврата после отказа от оплаты
          example: "https://www.site.com/example.html"
        client:
          $ref: "#/components/schemas/InvoiceClient"
        status:
          type: object
          readOnly: true
          properties:
            id:
              type: integer
              enum: [ 0, 1, 2, 3, 4, 5 ]
              description: >
                Статус оплаты Счета:
                * 0 - В обработке
                * 1 - Оплачен
                * 2 - Отмена (Ошибка)
                * 3 - Возврат
                * 4 - Ожидается обработка
                * 5 - Ожидается запрос статуса
              example: 1
            name:
              type: string
              description: Название статуса
              example: "Оплачен"
            bank:
              type: string
              description: Банк-эквайер, через который была совершена транзакция
              example: "FortaTech"
            errorInfo:
              type: string
              description: Ошибка, если есть
              nullable: true
            bankErrorCode:
              type: string
              description: Код ошибки от банка, если есть
              nullable: true

    InvoiceClient:
      type: object
      properties:
        fullName:
          type: string
          description: ФИО клиента
          maxLength: 80
          example: "Терентьев Михаил Павлович"
        address:
          type: string
          description: Адрес клиента
          maxLength: 255
          example: "г. Москва, дом 5"
        email:
          type: string
          example: "user@mail.com"
        login:
          type: string
          maxLength: 32
          example: "ExampleLogin"
        phone:
          type: string
          maxLength: 32
          example: "+7999123456"
        zip:
          type: string
          maxLength: 16
          example: "234234234"

    Payment:
      type: object
      required: [ip, card]
      properties:
        ip:
          type: string
          description: IP Клиента
          example: "108.177.16.21"
          writeOnly: true
        acsUrl:
          type: string
          readOnly: true
          description: URL страницы проверки 3DS. Если null, проверка не требуется.
          example: "https://pay1time.com/api/processingResult?payId=188636&status=succes&url=dfgdfgdfgdfdfgfdg=="
        card:
          type: object
          required: [cardNumber, cardHolder, expires, cvc]
          properties:
            cardNumber:
              type: string
              description: Номер карты. В ответе замаскирован.
              example: "4111111111111111"
            cardHolder:
              type: string
              description: Держатель карты
              example: "Terentiev Mihail"
            expires:
              type: string
              description: Месяц/год карты
              maxLength: 4
              minLength: 4
              example: "0122"
            cvc:
              type: string
              writeOnly: true
              description: CVC
              maxLength: 3
              minLength: 3
              example: "123"
        headerMap:
          type: object
          required: [userAgent, accept]
          nullable: true
          writeOnly: true
          properties:
            userAgent:
              type: string
              description: HTTP-заголовок User-Agent.
              maxLength: 255
              example: "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36"
            accept:
              type: string
              description: HTTP-заголовок Accept.
              maxLength: 255
              example: "text/html"
        browserData:
          type: object
          required: [screenHeight, screenWidth, windowHeight, windowWidth, timezoneOffset, language, colorDepth, javaEnabled]
          nullable: true
          writeOnly: true
          properties:
            screenHeight:
              type: integer
              description: "Высота экрана. JavaScript: window.screen.height."
              example: 800
            screenWidth:
              type: integer
              description: "Ширина экрана. JavaScript: window.screen.width."
              example: 1200
            windowHeight:
              type: integer
              description: "Высота окна. JavaScript: window.outerHeight."
              example: 800
            windowWidth:
              type: integer
              description: "Ширина окна. JavaScript: window.outerWidth."
              example: 1200
            timezoneOffset:
              type: integer
              description: "Разница между временной зоной браузера и UTC в минутах. JavaScript: (new Date()).getTimezoneOffset()."
              example: -180
            language:
              type: string
              description: "Язык браузера (ISO). JavaScript: navigator.language || navigator.userLanguage."
              maxLength: 5
              example: "ru-RU"
            colorDepth:
              type: integer
              description: "Глубина цвета. JavaScript: window.screen.colorDepth."
              example: 24
            javaEnabled:
              type: boolean
              description: "Java включен. JavaScript: window.navigator.javaEnabled()."
              example: false

    Refund:
      type: object
      properties:
        amountFractional:
          type: integer
          description: Сумма возврата в копейках (центах). null - полный возврат.
          required: false
          nullable: true
          minimum: 100
          maximum: 100000000
          example: 50000
        id:
          type: integer
          description: ID Возврата
          example: 1241423
          readOnly: true
        status:
          type: integer
          enum: [ 2, 4, 6 ]
          description: >
            Статус оплаты Счета:
            * 2 - Ошибка
            * 4 - Ожидается обработка
            * 6 - Возврат произведен
          example: 4
          readOnly: true
        message:
          type: string
          description: Сообщение и текст ошибки
          example: "Возврат произведен."
          readOnly: true

    ConflictError:
      type: object
      properties:
        name:
          type: string
          description: Conflict
          example: "Conflict"
        message:
          type: string
          description: Сообщение об ошибке
          example: "Ошибка."
        code:
          type: integer
          example: 0
        status:
          type: integer
          description: "409"
          example: 409
    NotFoundError:
      type: object
      properties:
        name:
          type: string
          description: Not Found
          example: Not Found
        message:
          type: string
          description: Сообщение об ошибке
          example: "Объект не найден."
        code:
          type: integer
          example: 0
        status:
          type: integer
          description: "404"
          example: 404

    InternalServerError:
      type: object
      properties:
        name:
          type: string
          description: Internal Server Error
          example: "Internal Server Error"
        message:
          type: string
          description: Сообщение об ошибке
          example: "Ошибка подключения к банку."
        code:
          type: integer
          example: 0
        status:
          type: integer
          description: "500"
          example: 500