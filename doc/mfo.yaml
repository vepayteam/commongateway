openapi: 3.0.0
info:
  title: API Vepay
  version: 1.0.8
security:
  - Mfo: []
    Token: []
tags:
  - name: Card
    description: Запросы по картам
  - name: Pay
    description: Запросы pay in
  - name: Out
    description: Запросы pay out
  - name: Ident
    description: Запросы идентификации
  - name: Info
    description: Информационные запросы
  - name: Callback
    description: Оповещения
  - name: Document
    description: Файлы документов
servers:
  - url: https://api.vepay.online/mfo
  - url: https://test.vepay.online/mfo
  - url: {{current_host}}/mfo
paths:
  /card/info:
    post:
      tags:
        - Card
      summary: Получить информацию о зарегистрированной карте
      description: Возвращает информацию о зарегистрированной карте пользователя по её идентификатору.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CardInfo"
        description: Параметры запроса
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardStatus"
        default:
          description: Error (40X,500)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /card/reg:
    post:
      tags:
        - Card
      summary: Регистрация (привязка) карты пользователя
      description: Сохраняет идентификатор карты пользователя, который можно использовать
        для дальнейших выплат или автоплатежей с использованием этой самой карты.
        В случае с привязкой карты для автоплатежей пользователю необходимо будет провести проверочный платеж на сумму в 11 р.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CardReg"
        description: Параметры запроса
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardRegAns"
        "400":
          description: Транзакция с передаваемым extid уже существует
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotUniquePayError"
        default:
          description: Error (40X,500)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /card/get:
    post:
      tags:
        - Card
      summary: Получить идентификатор карты
      description: Возвращает идентификатор и другие данные зарегистрованной карты,
        если регистрация ранее прошла успешно.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CardGet"
        description: Параметры запроса
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardStatus"
        default:
          description: Error (40X,500)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /card/del:
    post:
      tags:
        - Card
      summary: Удаление карты
      description: Делает недоступным использование идентификатора ранее зарегистрированной карты.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CardId"
        description: Параметры запроса
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusResult"
        default:
          description: Error (40X,500)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pay/lk:
    post:
      tags:
        - Pay
      summary: Оплата pay in через платежную форму VEPAY
      description: Создаёт операцию pay in. Возвращает ссылку на платёжную форму для дальнейшего ввода реквизитов карты.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PayIn"
        description: Параметры платежа
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusIdUrl"
        "400":
          description: Транзакция с передаваемым extid уже существует
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotUniquePayError"
        default:
          description: Error (40X,500)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pay/lk-parts:
    post:
      tags:
        - Pay
      summary: Оплата pay in через платежную форму VEPAY с разбивкой (сплитованием)
      description: Создаёт операцию pay in. Возвращает ссылку на платёжную форму для дальнейшего ввода реквизитов карты.
        Денежные средства в случае успешного проведения платежа распределяются между разными партнёрами, указанными в запросе.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PayLkParts"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusIdUrl"
        "400":
          description: Транзакция с передаваемым extid уже существует
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotUniquePayError"
        default:
          description: Error (40X,500)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pay/auto-parts:
    post:
      tags:
        - Pay
      summary: Совершить автоплатёж с разбивкой (сплитованием)
      description: Создаёт операцию автоплатежа с разбивкой (сплитованием).
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PayAutoParts"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      Статус
                      * 0 - Ошибка валидации или условий
                      * 1 - Оплата принята в обработку
                      * 2 - Внутренняя ошибка в процессе выполнения
                    example: 1
                  message:
                    type: string
                    description: Описание ошибки
                    example: ""
                  id:
                    type: integer
                    description: ID платежа. Присутствует, если операция прошла успешно
                    example: 12345
        "400":
          description: Транзакция с передаваемым extid уже существует
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotUniquePayError"
        default:
          description: Error (40X,500)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pay/auto:
    post:
      tags:
        - Pay
      summary: Совершить автоплатёж (рекуррентный платеж)
      description: Создаёт операцию автоплатежа.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PayAuto"
        description: Параметры платежа
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusId"
        "400":
          description: Транзакция с передаваемым extid уже существует
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotUniquePayError"
        default:
          description: Error (40X,500)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pay/state:
    post:
      tags:
        - Pay
      summary: Статус операции pay in
      description: Возвращает статус проведённой ранее операции pay in.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IdState"
        description: ID платежа
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusChannel"
        default:
          description: Error (40X,500)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /out/paycard:
    post:
      tags:
        - Out
      summary: Выплата денежных средств на карту (pay out)
      description: Создаёт операцию выплаты денежных средств на карту клиента.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OutCard"
        description: Параметры перевода
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusId"
        "400":
          description: Транзакция с передаваемым extid уже существует
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotUniquePayError"
        default:
          description: Error (40X,500)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /out/payul:
    post:
      tags:
        - Out
      summary:  Выплата денежных средств на счёт юрлица (pay out)
      description: Создаёт операцию выплаты денежных средств на счёт юрлица.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OutU"
        description: Параметры перевода
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusId"
        "400":
          description: Транзакция с передаваемым extid уже существует
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotUniquePayError"
        default:
          description: Error (40X,500)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /out/payacc:
    post:
      tags:
        - Out
      summary: Выплата денежных средств на счёт физлица (pay out)
      description: Создаёт операцию выплаты денежных средств на счёт физлица.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OutF"
        description: Параметры перевода
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusId"
        "400":
          description: Транзакция с передаваемым extid уже существует
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotUniquePayError"
        default:
          description: Error (40X,500)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /out/check-sbp-can-transfer:
    post:
      tags:
        - Out
      summary: СБП. Проверка возможности выплаты денежных средств на счёт физлица
      description: Проверка возможности выплаты денежных средств на счёт физлица через СБП.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckSbpOutF"
        description: Параметры перевода
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        default:
          description: Error (40X,500)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /out/sbp-transfer:
    post:
      tags:
        - Out
      summary: СБП. Выплата денежных средств на счёт физлица
      description: Создаёт операцию выплаты денежных средств на счёт физлица через СБП.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckSbpOutF"
        description: Параметры перевода
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusId"
        "400":
          description: Транзакция с передаваемым extid уже существует
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotUniquePayError"
        default:
          description: Error (40X,500)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /out/state:
    post:
      tags:
        - Out
      summary: Статус операции pay out
      description: Возвращает статус проведённой ранее операции pay out.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IdState"
        description: ID платежа
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusChannel"
        default:
          description: Error (40X,500)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /getsbpbankreceiver:
    post:
      tags:
        - Out
      summary: Список банков-участников СБП
      description: Возвращает список банков, участвующих в Системе Быстрых Платежей (СБП).
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type:
                  array
                items:
                  $ref: "#/components/schemas/BrsSpbReceiver"
        default:
          description: Error (40X,500)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /ident/req:
    post:
      tags:
        - Ident
      summary: Идентификация пользователя
      description: Отправляется запрос идентификации, в ответе на который возвращается id
        операции. По нему в последующем необходимо уточнить статус выполнения
        операции. Для идентификации телефона необходимо отправить дополнительный
        запрос идентификации, в котором указать код, пришедший по СМС.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IdentReq"
        description: Параметры перевода
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusId"
        default:
          description: Error (40X,500)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /ident/state:
    post:
      tags:
        - Ident
      summary: Статус идентификации
      description: Запрос результата идентификации.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IdState"
        description: ID запрса
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        default:
          description: Error (40X,500)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /сheck:
    post:
      tags:
        - Info
      summary: Проверка подключения
      description: Проверка подключения к серверу.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusResult"
        default:
          description: Error (40X,500)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /account/balance:
    post:
      tags:
        - Info
      summary: Запрос баланса счёта
      description: Возвращает баланс счёта площадки.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusAmount"
        default:
          description: Error (40X,500)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /callback:
    get:
      tags:
        - Callback
      summary: Обратный запрос
      description: Оповещение отправляется обратным HTTP-запросом на адрес, указанный в личном кабинете.
      parameters:
        - name: extid
          in: query
          required: true
          description: внешний идентификатор запроса
          schema:
            type: string
        - name: id
          in: query
          required: true
          description: идентификатор запроса платежа
          schema:
            type: integer
        - name: sum
          in: query
          required: true
          description: сумма платежа
          schema:
            type: number
        - name: status
          in: query
          required: true
          description: статус завершения (1 – успешно 2,3 - ошибка)
          schema:
            type: integer
        - name: channel
          in: query
          required: true
          description: банк-эквайер, через который была совершена транзакция
          schema:
            type: string
        - name: card
          in: query
          required: true
          description: маска карты в формате 411111******1111
          schema:
            type: string
        - name: errorCode
          in: query
          required: true
          description: код ошибки. 0 - обозначает успешный статус операции, TL - закончился срок жизни платежа, X - неизвестная ошибка. Остальные коды варьируются в зависимости от провайдера.
          schema:
            type: string
        - name: key
          in: query
          required: true
          description: Ключ формируется, как хеш суммы строк параметров md5(extid + id + sum + status + channel + card + errorCode + ключ обратного запроса)
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            text/html:
              schema:
                $ref: "#/components/schemas/CallbackState"
        default:
          description: Ошибка колбэка
  /check:
    get:
      tags:
        - Callback
      summary: Запрос проверки возможности оплаты
      description: Запрос проверки возможности оплаты. URL для запроса задаётся в личном кабинете
      parameters:
        - name: extid
          in: query
          required: true
          description: внешний идентификатор запроса
          schema:
            type: string
        - name: sum
          in: query
          required: true
          description: сумма платежа
          schema:
            type: number
      responses:
        "200":
          description: OK
          content:
            text/html:
              schema:
                $ref: "#/components/schemas/CheckReq"
        default:
          description: Ошибка проверки

  /report/create:
    post:
      tags:
        - Report
      summary: Создание отчета по транзакциям
      description: Отправляется запрос на формирование отчета по транзакциям. В ответ возвращается ID отчета (пока не сформированного).
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReportCreateRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReportCreateResponse"
        default:
          description: Error (40X,500)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /report/state:
    post:
      tags:
        - Report
      summary: Получение статуса отчета
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ID Отчета
                  required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: Статус отчета. 0 - в процессе, 1 - сформирован, 2 - ошибка
                  message:
                    type: string
                    description: Сообщение
        default:
          description: Error (40X,500)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /report/get-service-types:
    post:
      tags:
        - Report
      summary: Список доступных для мерчанта типов услуги
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                    status:
                        type: integer
                        description: Статус выполения запроса. 0 - успех.
                        example: 0
                    service_types:
                        type: object
                        description: Объект - ассоциативный массив с ID типов услуги в качестве ключей и названиями в качестве значений.
                        additionalProperties:
                            type: string
                        example:
                            "2": "Оплата товара"
                            "10": "Платёж AFT"
                            "11": "Выплата на счет"
        default:
          description: Error (40X,500)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /report/get-transaction-list:
    post:
      tags:
        - Report
      summary: Постраничный список транзакций в отчете
      description: 1000 записей на каждой странице
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ID Отчета
                  required: true
                page:
                  type: integer
                  description: Номер страницы начиная с нуля (0 - первая страница).
                  default: 0
      responses:
        "200":
          description: OK
          headers:
            X-Pagination-Total-Count:
              description: Всего транзакций в отчете
            X-Pagination-Page-Count:
              description: Всего страниц
            X-Pagination-Current-Page:
              description: Номер текущей страницы
            X-Pagination-Per-Page:
              description: Количество транзакций на странице
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReportTransaction"
        default:
          description: Error (40X,500)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /document/confirmation:
      get:
          tags:
              - Document
          summary: Документ подтверждения перевода денежных средств в формате PDF
          parameters:
              - in: query
                name: id
                description: ID платежа
                schema:
                  type: integer
          responses:
              "200":
                  description: Файл PDF
                  content:
                      application/pdf:
                          schema:
                              type: string
                              format: binary
              default:
                  description: Error (40X,500)
                  content:
                      application/json:
                          schema:
                              $ref: "#/components/schemas/Error"

components:
  securitySchemes:
    Mfo:
      type: apiKey
      in: header
      name: X-Mfo
      description: Логин
    Token:
      type: apiKey
      in: header
      name: X-Token
      description: Токен формируется по алгоритму sha1(sha1(ключ) + sha1(тело запроса))
  schemas:
    BankBalance:
      type: object
      properties:
        bank_name:
          type: string
          description: Название банка
        currency:
          type: string
          description: Валюта баланса
        amount:
          type: number
          description: Сумма баланса (float)
        account_type:
          type: string
          description: Тип счёта баланса (0 – default (баланса не по счёту) 1 - Счёт поступления (Транзитный) 2 -  Счёт выплат (Транзитный) 3 - Счёт (Номинальный))
    Part:
      type: object
      properties:
        merchant_id:
          type: number
          required: true
          description: Идентификатор партнера (поставщика услуг)
          example: 123
        amount:
          type: number
          required: true
          description: Сумма в целых частях валюты - рублях, долларах. Может содержать дробную часть для копеек или центов (до двух знаков после запятой).
          example: 1500.45
    Client:
      type: object
      required: false
      properties:
        email:
          type: string
          required: true
          description: Email клиента
        phone:
          type: string
          required: false
          description: Телефон клиента
        country:
          type: string
          required: false
          description: Страна клиента (формат ISO 3166-1 alpha-3)
          deprecated: true
        city:
          type: string
          required: false
          description: Город клиента
          deprecated: true
        address:
          type: string
          required: false
          description: Адресс клиента
        zip:
          type: string
          required: false
          description: Zip код клиента адреса
        login:
          type: string
          required: false
          description: Логин авторизации клиента
    CardInfo:
      type: object
      properties:
        card:
          type: integer
          description: Идентификатор карты
        type:
          type: integer
          description: Тип карты (0 – для автоплатежа, 1 – для пополнения)
    CardStatus:
      type: object
      properties:
        status:
          type: integer
          description: Код ошибки (0 – ожидане оплаты 1 - успешно 2 - ошибка платежа)
        message:
          type: string
          description: Описание ошибки
        card:
          $ref: "#/components/schemas/CardInfoAns"
    CardInfoAns:
      type: object
      properties:
        id:
          type: integer
          description: Идентификатор карты
        num:
          type: string
          description: Номер карты
        exp:
          type: string
          format: mm/yy
          description: Срок действия (мм/гг)
        holder:
          type: string
          description: Держатель карты
    CardReg:
      type: object
      properties:
        type:
          type: integer
          description: Тип карты (0 – для автоплатежа и пополнения, 1 – только для пополнения)
        extid:
          type: string
          maxLength: 40
          description: Внешний идентификатор запроса
        timeout:
          type: integer
          minimum: 10
          maximum: 59
          description: Тайм-аут ожидания оплаты, от 10 до 59 минут
        successurl:
          type: string
          format: url
          description: Адрес для Url для возврата после завершения платежа (успех)
        failurl:
          type: string
          format: url
          description: Адрес для Url для возврата после завершения платежа (ошибка)
        cancelurl:
          type: string
          format: url
          description: Адрес для Url для возврата после отказа от оплаты
        postbackurl:
          type: string
          format: url
          description: Адрес Url для обратного вызова
        postbackurl_v2:
          type: string
          format: url
          description: Дополнительный адрес Url для обратного вызова
        card:
          type: string
          description: Номер карты, 16 или 18 цифр
    CardRegAns:
      type: object
      properties:
        status:
          type: integer
          description: Статус (0 – ошибка 1 - успешно)
        message:
          type: string
          description: Сообщение ошибки
        id:
          type: integer
          description: Идентификатор запроса
        url:
          type: string
          description: Cсылка для перехода на форму регистрации
    CardGet:
      type: object
      properties:
        id:
          type: integer
          description: Идентификатор запроса регистрации карты
        type:
          type: integer
          description: Тип карты (0 – для автоплатежа, 1 – для пополнения)
    CardId:
      type: object
      properties:
        card:
          type: integer
          description: Идентификатор карты
    IdState:
      type: object
      properties:
        id:
          type: integer
          description: идентификатор запроса
    PayIn:
      type: object
      properties:
        amount:
          type: number
          description: Cумма платежа
        currency:
          type: string
          required: false
          description: Валюта платежа (По умолчанию RUB)
        type:
          type: number
          description: Тип шлюза
          deprecated: true
        document_id:
          type: string
          maxLength: 40
          description: Номер договора
        fullname:
          type: string
          maxLength: 80
          description: ФИО клиента
        extid:
          type: string
          maxLength: 40
          description: Внешний идентификатор запроса
        timeout:
          type: integer
          minimum: 10
          maximum: 59
          description: Тайм-аут ожидания оплаты, от 10 до 59 минут
        successurl:
          type: string
          format: url
          description: Адрес для Url для возврата после завершения платежа (успех)
        failurl:
          type: string
          format: url
          description: Адрес для Url для возврата после завершения платежа (ошибка)
        cancelurl:
          type: string
          format: url
          description: Адрес для Url для возврата после отказа от оплаты
        regcard:
          type: integer
          required: false
          description: "Опционально, возможные значения: 1, 0. Если 1, производится регистрация карты на рекуррентные платежи и выплаты. По умолчанию 0."
          enum:
              - 1
              - 0
        client:
          type: array
          required: false
          items:
            $ref: "#/components/schemas/Client"
    PayLkParts:
      type: object
      properties:
        type:
          type: number
          description: Тип шлюза
        extid:
          type: string
          description: Внешний идентификатор запроса
        descript:
          type: number
          description: Описание платежа
        successurl:
          type: string
          format: url
          description: Адрес для Url для возврата после завершения платежа (успех)
        cancelurl:
          type: string
          format: url
          description: Адрес для Url для возврата после отказа от оплаты
        postbackurl:
          type: string
          format: url
          description: Адрес Url для обратного вызова
        failurl:
          type: string
          format: url
          description: Адрес для Url для возврата после завершения платежа (ошибка)
        timeout:
          type: integer
          minimum: 10
          maximum: 59
          description: Тайм-аут ожидания оплаты, от 10 до 59 минут
        fullname:
          type: string
          maxLength: 80
          description: ФИО клиента
        document_id:
          type: string
          maxLength: 40
          description: Номер договора
        parts:
          type: array
          items:
            $ref: "#/components/schemas/Part"
    PayAutoParts:
      type: object
      properties:
        card:
          type: integer
          description: Идентификатор карты
          example: 12345
        extid:
          type: string
          description: Внешний уникальный идентификатор оплаты.
        fullname:
          type: string
          maxLength: 80
          description: ФИО клиента
        document_id:
          type: string
          maxLength: 40
          description: Номер договора
        parts:
          type: array
          items:
            $ref: "#/components/schemas/Part"
    PayAuto:
      type: object
      properties:
        card:
          type: integer
          description: Идентификатор карты
        amount:
          type: number
          description: Cумма платежа
        fullname:
          type: string
          maxLength: 80
          description: ФИО клиента
        document_id:
          type: string
          maxLength: 40
          description: Номер договора
        extid:
          type: string
          maxLength: 40
          description: Внешний идентификатор запроса
    OutCard:
      type: object
      properties:
        card:
          type: integer
          description: Идентификатор карты
        cardnum:
          type: string
          minLength: 16
          maxLength: 18
          description: Номер карты (16/18 цифр)
        amount:
          type: number
          description: Cумма платежа
        extid:
          type: string
          maxLength: 40
          description: Внешний идентификатор запроса
        document_id:
          type: string
          maxLength: 40
          description: Номер договора
        fullname:
          type: string
          maxLength: 80
          description: ФИО клиента

        birthDate:
          type: string
          description: Дата рождения, dd.mm.yyyy
        countryOfCitizenship:
          type: string
          default: 'RU'
          description: Гражданство, код страны
        countryOfResidence:
          type: string
          default: 'RU'
          description: Страна проживания, код страны
        birthPlace:
          type: string
          description: Место рождения
        documentType:
          type: string
          default: 'passport'
          enum: ['passport', 'id']
          description: Документ, тип
        documentIssuer:
          type: string
          maxLength: 80
          description: Документ, кем выдан документ
        documentIssuedAt:
          type: string
          description: Документ, дата выдачи, dd.mm.yyyy
        documentValidUntil:
          type: string
          description: Документ, действителен до, dd.mm.yyyy
        documentSeries:
          type: string
          description: Документ, серия
        documentNumber:
          type: string
          description: Документ, номер
        phone:
          type: string
          description: Номер телефона

    OutU:
      type: object
      properties:
        name:
          type: string
          description: Наименование получателя
        inn:
          type: string
          description: ИНН получателя
        kpp:
          type: string
          description: КПП получателя
        fio:
          type: string
          description: ФИО получателя
        account:
          type: string
          description: Счет в банке
        bic:
          type: string
          description: БИК банка
        descript:
          type: string
          maxLength: 210
          description: Назначение платежа
        amount:
          type: number
          description: Cумма платежа
        extid:
          type: string
          description: Внешний идентификатор запроса
    OutF:
      type: object
      properties:
        inn:
          type: string
          description: ИНН получателя
        fio:
          type: string
          description: ФИО получателя
        account:
          type: string
          description: Счет в банке
        bic:
          type: string
          description: БИК банка
        descript:
          type: string
          maxLength: 210
          description: Назначение платежа
        amount:
          type: number
          description: Cумма платежа
        extid:
          type: string
          description: Внешний идентификатор запроса
    CheckSbpOutF:
      type: object
      properties:
        client:
          type: object
          properties:
            firstName:
              type: string
              maxLength: 32
            middleName:
              type: string
              maxLength: 32
            lastName:
              type: string
              maxLength: 100
          description: Данные клиента (опциональный параметр)
        account:
          type: string
          description: Счет юридического лица, с которого отравляется перевод
        phone:
          type: string
          description: Номер телефона в формате 79123456789
        bic:
          type: string
          description: БИК банка получателя
        amount:
          type: number
          description: Cумма платежа
        extid:
          type: string
          maxLength: 40
          description: Ext ID
    Status:
      type: object
      properties:
        status:
          type: integer
          description: Статус (0 - в обработке, 1 - успешно, 2 - ошибка, 3 - отменен)
        message:
          type: string
          description: Сообщение ошибки
        rc:
          type: string
          description: Код ошибки банка (может отсутствовать)
    StatusChannel:
      type: object
      properties:
        status:
          type: integer
          description: Статус (0 - в обработке, 1 - успешно, 2 - ошибка, 3 - отменен)
        message:
          type: string
          description: Сообщение ошибки
        rc:
          type: string
          description: Код ошибки банка (может отсутствовать)
        channel:
          type: string
          description: Банк-эквайер, через который была совершена транзакция
    StatusResult:
      type: object
      properties:
        status:
          type: integer
          description: Статус (0 – ошибка 1 - успешно)
        message:
          type: string
          description: Описание ошибки
    StatusIdUrl:
      type: object
      properties:
        status:
          type: integer
          description: Статус (0 – ошибка 1 - принят)
        message:
          type: string
          description: Сообщение ошибки
        id:
          type: integer
          description: Идентификатор запроса (при успехе)
        url:
          type: string
          description: Cсылка для перехода на форму оплаты (при успехе)
    StatusId:
      type: object
      properties:
        status:
          type: integer
          description: Статус (0 – ошибка 1 - принят)
        message:
          type: string
          description: Описание ошибки
        id:
          type: integer
          description: Идентификатор запроса
    StatusAmount:
      type: object
      properties:
        status:
          type: integer
          description: Статус (0 – ошибка 1 - принят)
        message:
          type: string
          description: Сообщение ошибки
        amount:
          type: number
          deprecated: true
        balance:
          type: array
          description: Баланс по всем банкам
          items:
            $ref: "#/components/schemas/BankBalance"
    Error:
      type: object
      properties:
        name:
          type: string
          description: Наименование кода ошибки
        message:
          type: string
          description: Сообщение ошибки
        code:
          type: integer
          description: Дополнительный код ошибки
        status:
          type: integer
          description: Код ошибки
    NotUniquePayError:
      type: object
      properties:
        status:
          type: integer
          description: Код ошибки
          default: 0
        message:
          type: string
          description: Сообщение ошибки
          default: Транзакция с передаваемым extid уже существует
        id:
          type: integer
          description: ID операции
          example: 12345
        extid:
          type: string
          description: Внешний идентификатор запроса
          example: ABCD1234
    IdentReq:
      type: object
      properties:
        id:
          type: integer
          description: Идентификатор запроса (указывается повторном запросе, для проверки
            кода отправленного на телефон)
        fam:
          type: string
          description: Фамилия
        nam:
          type: string
          description: Имя
        otc:
          type: string
          description: Отчество
        paspser:
          type: string
          description: Серия паспорта
        paspnum:
          type: string
          description: Номер паспорта
        paspdate:
          type: string
          description: Дата выдачи паспорта
        paspcode:
          type: string
          description: Код подразделения паспорта
        paspvid:
          type: string
          description: Кем выдан паспорт
        phone:
          type: string
          description: Телефон (при необходимости проверки)
        phonecode:
          type: string
          description: Код отправленный на телефон (при повторном запросе)
        birth:
          type: string
          description: Дата рождения
        inn:
          type: string
          description: ИНН (при необходимости проверки)
        snils:
          type: string
          description: СНИЛС (при необходимости проверки)

    CheckReq:
      type: object
      properties:
        success:
          type: boolean
          description: Статус разрешения оплаты
        message:
          type: string
          description: Описание ошибки
    CallbackState:
      type: object
      properties:
        status:
          description: 0 - успешно, или код ошибки.
          type: string
    BrsSpbReceiver:
      type: object
      properties:
        name:
          type: string
          description: Название банка
        bic:
          type: string
          description: БИК

    ReportCreateRequest:
      type: object
      properties:
        date:
          type: string
          description: Дата транзакций в отчете в формате "Y-m-d". Пример "2021-12-12".
          required: true
        transactionStatus:
          type: integer
          description: Статус транзакций в отчете. 0 - в процессе, 1 - платеж завершён, 2 - ошибка, 3 - отмена
        serviceType:
          type: array
          description: Массив из ID типа услуги
          items:
            type: integer

    ReportCreateResponse:
      type: object
      properties:
        status:
          type: integer
          description: Статус выполнения запроса на отчет. 0 - ошибка, 1 - успешно
          enum: [0, 1]
        message:
          type: string
          description: Сообщение
        id:
          type: integer
          description: ID отчета (есть при успешном выполнении)

    ReportTransaction:
      type: object
      properties:
        Id:
          type: integer
          description: ID транзакции в Vepay
        ReportId:
          type: integer
          description: ID отчета
        Status:
          type: integer
          description: Статус транзакции. 0 - в процессе, 1 - успешно, 2 - ошибка, 3 - отмена.
        ErrorCode:
          type: integer
          description: Код ошибки
          nullable: true
        Error:
          type: string
          description: Сообщение об ошибке
          nullable: true
        ExtId:
          type: string
          description: Внешний ID от мерчанта
          nullable: true
        ProviderBillNumber:
          type: string
          description: ID транзакции в банке
          nullable: true
        Merchant:
          type: string
          description: Имя мерчанта
        ServiceName:
          type: string
          description: Название типа услуги
        BasicAmount:
          type: string
          description: Сумма платежа
          example: "500.00"
        AuthAmount:
          type: string
          description: Сумма списания
          example: "510.50"
        ClientCommission:
          type: string
          description: Комиссия с клиента
          example: "10.50"
        MerchantCommission:
          type: string
          description: Комиссия с мерчанта
          example: "0.00"
        Currency:
          type: string
          description: Валюта (ISO 4217)
          example: "RUB"
        CardPan:
          type: string
          description: Маскированный номер карты
          example: "411111******1111"
        CardPaymentSystem:
          type: string
          description: Система оплаты
          example: "VISA"
        Provider:
          type: string
          description: Название банка
          example: "ТКБ"
        CreateDateTime:
          type: string
          description: Дата и время создания в формате "Y-m-d H:i:s"
          example: "2021-12-04 11:45:08"
        FinishDateTime:
          type: string
          description: Дата и время завершения платежа в формате "Y-m-d H:i:s" (если завершился)
          example: "2021-12-04 11:45:08"
          nullable: true


